<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
  "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
  "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<!-- Generated automatically from the following - do not edit this file directly. -->
<!--     buildSrc/src/main/resources/checkstyle.xml -->
<!--     buildSrc/src/main/resources/checkstyle_ide_fragment.xml -->
<module name="Checker">
  <property name="charset" value="UTF-8"/>
  <module name="SuppressionFilter">
    <property name="file" value="buildSrc/src/main/resources/checkstyle_suppressions.xml"/>
  </module>
  <module name="SuppressWarningsFilter"/>
  <module name="RegexpMultiline">
    <property name="id" value="EmptyJavadoc"/>
    <property name="format" value="\/\*[\s\*]*\*\/"/>
    <property name="fileExtensions" value="java"/>
    <property name="message" value="Empty javadoc comments are forbidden"/>
  </module>
  <module name="org.elasticsearch.gradle.checkstyle.SnippetLengthCheck">
    <property name="id" value="SnippetLength"/>
    <property name="max" value="76"/>
  </module>
  <module name="LineLength">
    <property name="max" value="140"/>
    <property name="ignorePattern" value="^ *\* *https?://[^ ]+$"/>
  </module>
  <module name="TreeWalker">
    <module name="SuppressWarningsHolder"/>
    <module name="AvoidStarImport"/>
    <module name="UnusedImports"/>
    <module name="OuterTypeFilename"/>
    <module name="NoLineWrap"/>
    <module name="OneStatementPerLine"/>
    <module name="OneTopLevelClass"/>
    <module name="UpperEll"/>
    <module name="EqualsHashCode"/>
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>
    <module name="PackageDeclaration"/>
    <module name="RegexpSinglelineJava">
      <property name="format" value="serialVersionUID"/>
      <property name="message" value="Do not declare serialVersionUID."/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="format" value="java\.io\.Serializable;"/>
      <property name="message" value="References java.io.Serializable."/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="DescendantToken">
      <property name="id" value="EqualityWithTrue"/>
      <property name="tokens" value="EQUAL"/>
      <property name="limitedTokens" value="LITERAL_TRUE"/>
      <property name="maximumNumber" value="0"/>
      <property name="maximumDepth" value="1"/>
      <message key="descendant.token.max" value="Do not check for equality with 'true', since it is implied"/>
    </module>
    <module name="DescendantToken">
      <property name="id" value="BooleanNegation"/>
      <property name="tokens" value="EXPR"/>
      <property name="limitedTokens" value="LNOT"/>
      <property name="maximumNumber" value="0"/>
      <property name="maximumDepth" value="2"/>
      <message key="descendant.token.max" value="Do not negate boolean expressions with '!', but check explicitly with '== false' as it is more explicit"/>
    </module>
    <module name="MissingJavadocMethod">
      <property name="severity" value="warning"/>
      <property name="minLineCount" value="2"/>
      <property name="allowedAnnotations" value="Override,Before,BeforeClass,After,AfterClass,Inject"/>
      <message key="javadoc.missing" value="Public methods should be documented"/>
    </module>
    <module name="MissingJavadocPackage">
      <property name="severity" value="warning"/>
      <message key="package.javadoc.missing" value="A description and other related documentation for a package should be written up in the package-info.java"/>
    </module>
    <module name="org.elasticsearch.gradle.checkstyle.MissingJavadocTypeCheck">
      <property name="ignorePattern" value="^.*(Tests?|IT)$"/>
      <property name="severity" value="warning"/>
      <message key="javadoc.missing" value="Types should explain their purpose"/>
    </module>
    <module name="JavadocMethod">
      <property name="severity" value="warning"/>
      <property name="scope" value="public"/>
    </module>
  </module>
</module>
